import os
import subprocess

# name of the transcript file generated by ./1_convert_json_to_trn.py
transcript_name = "transcript_lowSNR_FaSNet_TAC_variable"

for mode in ['moving', 'static']:
    print(f'\nProcessing {mode} scenes...')
    scenes_path = f'/asr_results/wenetspeech_asr_model/dataset_results/{mode}'
    scenes =  [name for name in os.listdir(scenes_path) if os.path.isdir(os.path.join(scenes_path, name))]
    print(scenes)
    print(len(scenes))
    
    for scene in scenes:
        scene_path = f'{scenes_path}/{scene}'
        ref = f'{scene_path}/ref_{scene}.trn'
        hyp = f'{scene_path}/{transcript_name}_{scene}.trn'
        with open(ref, 'r', encoding='utf8') as f:
            ref_lines = f.readlines()
        with open(hyp, 'r', encoding='utf8') as f:
            hyp_lines = f.readlines()
        assert len(ref_lines) == len(hyp_lines), "scene_path:{}, ref_lines:{}, hyp_lines:{}".format(scene_path, len(ref_lines), len(hyp_lines))
        output_file = hyp.replace(".trn", ".txt")
        # calculate CER using sclite
        # you can change the path of sclite to your own
        command = "/espnet/tools/sctk/bin/sclite -r " + ref + " -h " + hyp + " -i rm -o all stdout > " + output_file

        process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=None, shell=True)

        print(f'done {output_file} \n')